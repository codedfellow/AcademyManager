@model GeneralCourseDetailsVM
@inject AcademyManager.Contracts.IScoresRepository scoresRepo
@inject AcademyManager.Contracts.ITestsAndExamsRepository testsAndExamsRepo
@inject UserManager<AMUser> user
@{
    ViewData["Title"] = "GeneralCourseDetails";
}

<h1>General Course Details</h1>
<div class="row">
    @foreach (var item in Model.TestsOrExams)
    {
        <div class="card col-sm-6 mb-2 col-12">
            @{
                var testOrExam = testsAndExamsRepo.FindById(item.TestOrExamId);
            }
                <div class="card-header">
                    <h4 class="card-title">@testOrExam.TestOrExamName</h4>
                </div>
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Trainee</th>
                                <th>Score</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var scores = item.Scores;
                                for (int i = 0; i < scores.Count; i++)
                                {
                                    var trainee = user.FindByIdAsync(scores[i].TraineeId).Result;

                                    <tr>
                                        <td><b>@trainee.FirstName @trainee.LastName @trainee.MiddleName</b></td>
                                        <td>@scores[i].Score</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            }
        </div>
